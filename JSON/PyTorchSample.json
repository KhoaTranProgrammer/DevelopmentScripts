{
    "Introduction":
    {
        "Description":
        {
            "list":[
                "This is example of testing",
                "python ControlProcess.py -ji JSON/PyTorchSample.json"
            ]
        }
    },
    "PyTorch":
    {
        "Transforms":
        {
            "list":[
                {
                    "Input":
                    {
                        "ID": "train_transform",
                        "Rotation": "30",
                        "ResizedCrop": "32",
                        "HorizontalFlip": true
                    }
                }
            ]
        },
        "DataLoader":
        {
            "list":[
                {
                    "Input":
                    {
                        "ID": "train_loader",
                        "DataType": "CIFAR10",
                        "Location": "{BUILD}/CIFAR10/",
                        "Transforms": "train_transform",
                        "Download": false,
                        "Train": true,
                        "BatchSize": "32"
                    }
                }
            ]
        },
        "ShowImages":
        {
            "list":[
                {
                    "Input":
                    {
                        "DataLoader": "train_loader",
                        "Show": false,
                        "Count": "1",
                        "Classes": ["plane", "car", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]
                    }
                }
            ]
        },
        "NeuralNetwork":
        {
            "list":[
                {
                    "Input":
                    {
                        "ID": "neural_network",
                        "DefinedNet": "{SCRIPTS}/JSON/PyTorchSampleNeuralNetwork.py"
                    }
                }
            ]
        },
        "Criterion":
        {
            "list":[
                {
                    "Input":
                    {
                        "ID": "criterion",
                        "Loss": "NLLLoss"
                    }
                }
            ]
        },
        "Optimizer":
        {
            "list":[
                {
                    "Input":
                    {
                        "ID": "optimizer",
                        "NeuralNetwork": "neural_network"
                    }
                }
            ]
        },
        "Training":
        {
            "list":[
                {
                    "Input":
                    {
                        "NeuralNetwork": "neural_network",
                        "Criterion": "criterion",
                        "Optimizer": "optimizer",
                        "DataLoader": "train_loader",
                        "Epochs": "1"
                    }
                }
            ]
        },
        "Testing":
        {
            "list":[
                {
                    "Input":
                    {
                        "NeuralNetwork": "neural_network"
                    }
                }
            ]
        }
    }
}
